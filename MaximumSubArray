def maxCrossSum(array, low, mid, high):
    sums = 0
    leftSum = -10000
    
#For finding maximum sum sub array in the left of the array

    for i in range(mid, low-1, -1):
         sums = sums + array[i]

         if (sums > leftSum):
           leftSum = sums

#For finding maximum sum sub array in the right of the array

    sums = 0
    rightSum = -1000
    for i in range(mid + 1, high + 1):
        sums = sums + array[i]

        if (sums > rightSum):
            rightSum = sums


    return max(leftSum + rightSum, leftSum, rightSum)



def maxSubarraySum(array, low, high):

#For the base condition i.e if there is only one element in the array
   if (low == high):
     return array[low]

#Calculating the mid point
   mid = (low + high) // 2


   return max(maxSubarraySum(array, low, mid),
            maxSubarraySum(array, mid+1, high),
            maxCrossSum(array, low, mid, high))
